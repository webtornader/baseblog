version: '3.8'
services:
    nginx:
        build:
          context: ./docker/nginx
        container_name: nginx
        volumes:
            - .:/var/www:rw
            - ./logs/nginx:/var/log/nginx/:rw
        ports:
            - 80:80
        restart: always
        depends_on:
            - php
    php:
        build:
          context: ./docker/php
          args:
            - PUID=${PUID}
            - PGID=${PGID}
            - INSTALL_XDEBUG=${INSTALL_XDEBUG}
        container_name: php
        restart: always
        environment:
            - PHP_EXTENSIONS=pdo_pgsql
            - POSTGRES_HOST=${POSTGRES_HOST}
            - POSTGRES_DB=${POSTGRES_DB}
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        depends_on:
            - postgres
        volumes:
            - .:/var/www
        extra_hosts:
            - "host.docker.internal:host-gateway"
    postgres:
        image: postgres:13
        build:
          context: ./docker/postgres
        container_name: postgres
        restart: always
        environment:
            - POSTGRES_DB=${POSTGRES_DB}
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        ports:
            - ${POSTGRES_HOST_PORT}:${POSTGRES_CONTAINER_PORT}
        volumes:
            - db_data:/var/lib/postgresql/data:rw
          # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
          # - ./docker/db/data:/var/lib/postgresql/data:rw
    mysql:
        image: mysql:8.0
        container_name: mysql
        restart: always
        environment:
            MYSQL_DATABASE: ${MYSQL_DB}
            MYSQL_USER: ${MYSQL_USER}
            MYSQL_PASSWORD: ${MYSQL_PASSWORD}
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
        ports:
            - "3306:3306"
        volumes:
            - mysql_data:/var/lib/mysql
volumes:
    mysql_data:
    db_data: